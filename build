#!/bin/bash
cd /tmp/rom # Depends on where source got synced
rm -rf .repo & # lets remove unnecessary things, so that no storage issue can occur

# Normal build steps
. build/envsetup.sh
export ALLOW_MISSING_DEPENDENCIES=true
lunch aosp_platina-userdebug
export CCACHE_DIR=/tmp/ccache
export CCACHE_EXEC=$(which ccache)
export USE_CCACHE=1
ccache -M 20G # It took only 6.4GB for mido
ccache -o compression=true # Will save times and data to download and upload ccache, also negligible performance issue
ccache -z # Clear old stats, so monitor script will provide real ccache statistics

# Telgram env setup
export BOT_MSG_URL="https://api.telegram.org/bot$API_BOT/sendMessage" 
export BOT_BUILD_URL="https://api.telegram.org/bot$API_BOT/sendDocument"

tg_post_msg() {
	curl -s -X POST "$BOT_MSG_URL" -d chat_id="$2" \
	-d "parse_mode=html" \
	-d text="$1"
}

# Next 8 lines should be run first to collect ccache and then upload, after doning it 1 or 2 times, our ccache will help to build without these 8 lines
#make api-stubs-docs || echo no problem
#make hiddenapi-lists-docs || echo no problem
#make system-api-stubs-docs || echo no problem
#make test-api-stubs-docs || echo no problem
#make bacon -j10 &
#sleep 85m # Lets give some space for uploading ccache
#kill %1 # better way to kill it
#ccache -s

# upload function for uploading rom zip file! I don't want unwanted builds in my google drive haha!
up(){
	curl --upload-file $1 https://transfer.sh/$(basename $1); echo
	# 14 days, 10 GB limit
}

# Let's compile by parts! Coz of ram issue!
make_metalava(){
	make api-stubs-docs || echo no problem
	make hiddenapi-lists-docs || echo no problem
	make system-api-stubs-docs || echo no problem
	make test-api-stubs-docs || echo no problem
}

make_rom(){
	tg_post_msg "<b>d4Rk CI Build Triggered</b>" "$CHATID"
	m aex -j8
	if [ -f out/target/product/platina/*.zip ]; then
		zip=$(up out/target/product/platina/*.zip)
		echo " "
		echo "$zip"
		tg_post_msg "<b>Build Completed</b>%0A%0A<b>Link : </b> <code>"$zip"</code>" "$CHATID"
	else
		tg_post_msg "<b>Build Failed, check cirrus console</b>" "$CHATID"
	fi
}

make_metalava
make_rom
